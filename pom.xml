<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.springframework.hateoas</groupId>
	<artifactId>spring-hateoas</artifactId>
	<version>3.0.0-SNAPSHOT</version>

	<name>Spring HATEOAS</name>
	<url>https://github.com/spring-projects/spring-hateoas</url>
	<description>
		Library to support implementing representations for
		hyper-text driven REST web services.
	</description>

	<inceptionYear>2011</inceptionYear>

	<organization>
		<name>Pivotal, Inc.</name>
		<url>https://www.spring.io</url>
	</organization>

	<developers>
		<developer>
			<id>odrotbohm</id>
			<name>Oliver Drotbohm</name>
			<email>odrotbohm(at)vmware.com</email>
			<organization>VMware, Inc.</organization>
			<roles>
				<role>Project lead</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<id>gturnquist</id>
			<name>Greg Turnquist</name>
			<email>gturnquist(at)vmware.com</email>
			<organization>VMware, Inc.</organization>
			<roles>
				<role>Contributor</role>
			</roles>
			<timezone>-6</timezone>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0</url>
			<comments>
				Copyright 2011-2022 the original author or authors.

				Licensed under the Apache License, Version 2.0 (the "License");
				you may not use this file except in compliance with the License.
				You may obtain a copy of the License at

				https://www.apache.org/licenses/LICENSE-2.0

				Unless required by applicable law or agreed to in writing, software
				distributed under the License is distributed on an "AS IS" BASIS,
				WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
				implied.
				See the License for the specific language governing permissions and
				limitations under the License.
			</comments>
		</license>
	</licenses>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<source.level>17</source.level>
		<artifactory-maven-plugin.version>3.6.2</artifactory-maven-plugin.version>
		<assertj.version>3.27.4</assertj.version>
		<spring-asciidoctor-backends.version>0.0.7</spring-asciidoctor-backends.version>
		<errorprone.version>2.36.0</errorprone.version>
		<evo.version>1.3</evo.version>
		<logback.version>1.5.18</logback.version>
		<jacoco>0.8.12</jacoco>
		<jacoco.destfile>${project.build.directory}/jacoco.exec</jacoco.destfile>
		<jackson-bom.version>2.20.0-rc1</jackson-bom.version>
		<java-module-name>spring.hateoas</java-module-name>
		<jsonpath.version>2.9.0</jsonpath.version>
		<junit.version>5.13.4</junit.version>
		<lombok.version>1.18.38</lombok.version>
		<nullaway.version>0.12.7</nullaway.version>
		<reactor-bom.version>2024.0.9</reactor-bom.version>
		<slf4j.version>2.0.17</slf4j.version>
		<spring.version>7.0.0-M8</spring.version>
		<spring-plugin.version>4.0.0-M1</spring-plugin.version>
		<kotlin.version>2.2.10</kotlin.version>
		<kotlinx-coroutines.version>1.10.2</kotlinx-coroutines.version>
		<mockk.version>1.14.5</mockk.version>
	</properties>

	<profiles>

		<profile>
			<id>spring-next</id>
			<properties>
				<reactor-bom.version>2024.0.10-SNAPSHOT</reactor-bom.version>
				<spring.version>7.0.0-SNAPSHOT</spring.version>
			</properties>
			<repositories>
				<repository>
					<id>spring-snapshot</id>
					<url>https://repo.spring.io/snapshot</url>
				</repository>
			</repositories>
		</profile>

		<profile>
			<id>kotlin-next</id>
			<properties>
				<kotlin.version>2.2.20-Beta2</kotlin.version>
				<kotlinx-coroutines.version>1.10.2</kotlinx-coroutines.version>
			</properties>
		</profile>

		<profile>
			<id>jackson-next</id>
			<properties>
				<jackson-bom.version>2.20.0-rc1</jackson-bom.version>
			</properties>
		</profile>

		<profile>

			<!-- Profile to be run on the CI server, JARs JavaDocs -->

			<id>ci</id>

			<build>
				<plugins>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>create-javadoc-jar</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>

		</profile>

		<profile>
			<id>nullaway</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<showWarnings>true</showWarnings>
							
						</configuration>
						<executions>
							<execution>
								<id>default-compile</id>
								<phase>none</phase>
							</execution>
							<execution>
								<id>java-compile</id>
								<phase>compile</phase>
								<goals>
									<goal>compile</goal>
								</goals>
								<configuration>
									<annotationProcessorPaths>
										<path>
											<groupId>com.google.errorprone</groupId>
											<artifactId>error_prone_core</artifactId>
											<version>${errorprone.version}</version>
										</path>
										<path>
											<groupId>com.uber.nullaway</groupId>
											<artifactId>nullaway</artifactId>
											<version>${nullaway.version}</version>
										</path>
									</annotationProcessorPaths>
									<compilerArgs>
										<arg>-XDcompilePolicy=simple</arg>
										<arg>--should-stop=ifError=FLOW</arg>
										<arg>-Xplugin:ErrorProne -XepDisableAllChecks -Xep:NullAway:ERROR -XepOpt:NullAway:OnlyNullMarked=true -XepOpt:NullAway:CustomContractAnnotations=org.springframework.lang.Contract</arg>
									</compilerArgs>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>artifactory</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jfrog.buildinfo</groupId>
						<artifactId>artifactory-maven-plugin</artifactId>
						<version>${artifactory-maven-plugin.version}</version>
						<inherited>false</inherited>
						<executions>
							<execution>
								<id>deploy-to-artifactory</id>
								<goals>
									<goal>publish</goal>
								</goals>
								<configuration>
									<publisher>
										<contextUrl>https://repo.spring.io</contextUrl>
										<username>${env.ARTIFACTORY_USERNAME}</username>
										<password>${env.ARTIFACTORY_PASSWORD}</password>
										<repoKey>libs-milestone-local</repoKey>
										<snapshotRepoKey>libs-snapshot-local</snapshotRepoKey>
									</publisher>
									<buildInfo>
										<buildName>CI build for Spring Modulith ${project.version}</buildName>
									</buildInfo>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>sonatype</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>3.2.7</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<!-- Password via MAVEN_GPG_PASSWORD -->
						</configuration>
					</plugin>
					 <plugin>
						<groupId>org.sonatype.central</groupId>
						<artifactId>central-publishing-maven-plugin</artifactId>
						<version>1.7.0</version>
						<extensions>true</extensions>
						<configuration>
							<deploymentName>Spring HATEOAS ${project.version}</deploymentName>
							<publishingServerId>central-ossrh</publishingServerId>
							<autoPublish>true</autoPublish>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>

			<!--
				Profile to be activated when building the docs artifacts.
			-->

			<id>documentation</id>

			<properties>
				<generated-docs.directory>${project.build.directory}/generated-docs</generated-docs.directory>
				<maven.main.skip>true</maven.main.skip>
				<maven.test.skip>true</maven.test.skip>
				<maven.install.skip>true</maven.install.skip>
			</properties>

			<build>

				<plugins>

					<!--
						Configures JavaDoc generation.
					-->

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>aggregate-javadoc</id>
								<goals>
									<goal>aggregate-no-fork</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<outputDirectory>${project.basedir}/target/site</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!--
						Asciidoctor
					-->

					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>3.0.0</version>
						<dependencies>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-diagram</artifactId>
								<version>2.3.0</version>
							</dependency>
							<dependency>
								<groupId>io.spring.asciidoctor.backends</groupId>
								<artifactId>spring-asciidoctor-backends</artifactId>
								<version>${spring-asciidoctor-backends.version}</version>
							</dependency>
						</dependencies>

						<executions>

							<execution>
								<id>html</id>
								<phase>compile</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
										<backend>spring-html</backend>
										<sourceDirectory>src/main/asciidoc</sourceDirectory>
										<sourceDocumentName>index.adoc</sourceDocumentName>
										<outputDirectory>${generated-docs.directory}/html</outputDirectory>
										<attributes>
											<source-highlighter>highlight.js</source-highlighter>
											<highlightjsdir>js/highlight</highlightjsdir>
											<highlightjs-theme>github</highlightjs-theme>
										</attributes>
									</configuration>
							</execution>

						</executions>

						<configuration>
							<doctype>book</doctype>
							<attributes>
								<doctype>book</doctype>
								<docinfo>shared</docinfo>
								<icons>font</icons>
								<sectids>false</sectids>
								<imagesdir>images</imagesdir>
								<version>${project.version}</version>
								<projectName>${project.name}</projectName>
								<projectVersion>${project.version}</projectVersion>
								<springVersion>${spring.version}</springVersion>
								<allow-uri-read>true</allow-uri-read>
								<toclevels>4</toclevels>
								<numbered>true</numbered>
							</attributes>
							<requires>
								<require>asciidoctor-diagram</require>
							</requires>
						</configuration>

					</plugin>

					<!--
						Creates two zip files for download as well as API and reference documentation distribution.
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>3.7.1</version>
						<executions>
							<execution>
								<id>docs</id>
								<goals>
									<goal>single</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<descriptors>
										<descriptor>src/docs/resources/assemblies/docs.xml</descriptor>
									</descriptors>
									<finalName>spring-hateoas-${project.version}</finalName>
									<appendAssemblyId>true</appendAssemblyId>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<!-- Skip default deployment -->

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>

					<!-- Deploy to Artifactory -->

					<plugin>
						<groupId>org.jfrog.buildinfo</groupId>
						<artifactId>artifactory-maven-plugin</artifactId>
						<version>${artifactory-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>deploy-docs</id>
								<goals>
									<goal>publish</goal>
								</goals>
								<phase>deploy</phase>
								<configuration>
									<deployProperties>
										<zip.name>spring-hateoas-docs</zip.name>
										<zip.displayname>spring-hateoas-docs</zip.displayname>
										<zip.deployed>false</zip.deployed>
										<zip.type>docs</zip.type>
									</deployProperties>
									<buildInfo>
										<!-- Retain only a single build -->
										<buildName>Spring Data Docs spring-hateoas ${project.version}</buildName>
										<buildRetentionCount>1</buildRetentionCount>
									</buildInfo>
									<publisher>
										<contextUrl>https://repo.spring.io</contextUrl>
										<includePatterns>*-docs.zip</includePatterns>
										<username>${env.ARTIFACTORY_USERNAME}</username>
										<password>${env.ARTIFACTORY_PASSWORD}</password>
										<repoKey>temp-private-local</repoKey>
										<snapshotRepoKey>temp-private-local</snapshotRepoKey>
									</publisher>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.projectreactor</groupId>
				<artifactId>reactor-bom</artifactId>
				<version>${reactor-bom.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${junit.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson</groupId>
				<artifactId>jackson-bom</artifactId>
				<version>${jackson-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-bom</artifactId>
				<version>${kotlin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlinx</groupId>
				<artifactId>kotlinx-coroutines-bom</artifactId>
				<version>${kotlinx-coroutines.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- Kotlin extension -->
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-reactor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jspecify</groupId>
			<artifactId>jspecify</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-test</artifactId>
			<version>${kotlin.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.mockk</groupId>
			<artifactId>mockk-jvm</artifactId>
			<version>${mockk.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webflux</artifactId>
			<version>${spring.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.plugin</groupId>
			<artifactId>spring-plugin-core</artifactId>
			<version>${spring-plugin.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>${jsonpath.version}</version>
		</dependency>

		<dependency>
			<groupId>org.atteo</groupId>
			<artifactId>evo-inflector</artifactId>
			<version>${evo.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Validation API -->

		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<version>3.0.2</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>8.0.1.Final</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>2.28.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>6.0.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>net.jadler</groupId>
			<artifactId>jadler-all</artifactId>
			<version>1.3.1</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>io.projectreactor.netty</groupId>
			<artifactId>reactor-netty</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.projectreactor.addons</groupId>
			<artifactId>reactor-extra</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit</artifactId>
			<version>1.3.0</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<defaultGoal>verify</defaultGoal>

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>3.0.0</version>
			</extension>
		</extensions>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.10.1</version>
					<configuration>
						<breakiterator>true</breakiterator>
						<header>${project.name}</header>
						<javadocVersion>1.8</javadocVersion>
						<source>${source.level}</source>
						<quiet>true</quiet>
						<doclint>none</doclint>
						<links>
							<!--<link>https://docs.spring.io/spring/docs/${spring.version}/javadoc-api/</link>-->
							<link>https://docs.oracle.com/en/java/javase/17/docs/api/</link>
						</links>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonatype.central</groupId>
					<artifactId>central-publishing-maven-plugin</artifactId>
					<version>0.8.0</version>
					<extensions>true</extensions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.6.0</version>
				<executions>
					<execution>
						<id>add-docs-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/docs/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-docs-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/docs/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>add-kotlin-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/src/main/kotlin</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<source>${source.level}</source>
					<target>${source.level}</target>
					<parameters>true</parameters>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.4.2</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Implementation-Title>${project.name}</Implementation-Title>
							<Implementation-Version>${project.version}</Implementation-Version>
							<Automatic-Module-Name>${java-module-name}</Automatic-Module-Name>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<version>${kotlin.version}</version>
				<configuration>
					<jvmTarget>1.8</jvmTarget>
				</configuration>
				<executions>
					<execution>
						<id>compile</id>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/main/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
					<execution>
						<id>test-compile</id>
						<goals>
							<goal>test-compile</goal>
						</goals>
						<configuration>
							<sourceDirs>
								<sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
								<sourceDir>${project.basedir}/src/test/java</sourceDir>
							</sourceDirs>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.1.3</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<releaseProfiles>sonatype</releaseProfiles>
					<pushChanges>false</pushChanges>
					<localCheckout>true</localCheckout>
					<signTag>true</signTag>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
						<configuration>
							<updatePomFile>true</updatePomFile>
							<flattenMode>oss</flattenMode>
							<pomElements>
								<distributionManagement>remove</distributionManagement>
								<properties>remove</properties>
								<repositories>remove</repositories>
								<profiles>remove</profiles>
							</pomElements>
						</configuration>
					</execution>
					<execution>
						<id>flatten-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<scm>
		<url>https://github.com/spring-projects/spring-hateoas</url>
		<connection>scm:git:git://github.com/spring-projects/spring-hateoas.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:spring-projects/spring-hateoas.git</developerConnection>
		<tag>main</tag>
	</scm>

	<repositories>
		<repository>
			<id>spring-milestone</id>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-snapshot</id>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>

</project>
